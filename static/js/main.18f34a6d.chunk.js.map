{"version":3,"sources":["styles/theme.js","config.js","UserProvider.js","components/Header.js","components/games/SlotMachine/slotMachinesDescriptions.js","components/games/SlotMachine/SlotMachineAbout.js","components/pages/WelcomePage.js","components/pages/LoginPage.js","components/pages/GamesPage.js","components/Loading.js","components/CurrentBalance.js","components/PayDialog.js","components/pages/UserPage.js","utils.js","components/pages/NotFoundPage.js","components/games/GamesSidebar.js","ajaxRequests.js","components/games/SlotMachine/SlotMachineColumn.js","components/games/SlotMachine/SlotMachine.js","components/games/Games.js","components/AppRoutes.js","components/App.js","index.js","images/slot-machine.jpg","images/big-slot-machine.jpg","images/casino.jpeg","images/slot-sprites.png"],"names":["theme","palette","body","text","primary","primaryText","secondary","secondaryText","color","negate","string","inverse","inverseText","positive","negative","dark","fonts","main","code","HOST","UserContext","createContext","useUser","useContext","userLocalStorageManagement","set","user","localStorage","setItem","JSON","stringify","get","getItem","parse","remove","removeItem","UserProvider","children","useState","userState","setUserState","setUser","userData","username","password","a","axios","params","data","gameName","delta","description","gamesRoutes","classicSlotMachine","advancedSlotMachine","token","url","method","headers","contextData","fetchUser","updateUserBalance","logoutUser","Provider","value","HeaderContainer","styled","header","props","StyledLink","Link","StyledSpan","span","HeaderAccountData","to","size","email","Header","route","logoIcon","role","aria-label","brandName","iconAriaLabel","icon","fontSize","spaceBetweenIconAndText","classicSMdescriptionHtml","advancedSMdescriptionHtml","SlotMachineAbout","slotMachineGameName","linkUrl","cardWidth","imgSrc","classicSlotMachineImage","advancedSlotMachineImage","gameDescriptionHtml","Container","Card","width","GameImage","src","alt","blendMode","position","FlexColumn","buttonText","padding","div","img","TopContainer","casino","BottomContainer","MegaTitle","h1","Title","h2","WelcomePage","href","id","LoginBox","Box","attrs","LoginButton","button","LoginForm","form","Error","p","createChangeHandler","setter","e","target","LoginPage","hasError","setHasError","setUsername","setPassword","height","alignItems","justifyContent","onSubmit","preventDefault","flex","px","pt","shouldBeFocused","labelText","type","name","onChangeHandler","py","disabled","Flex","flexDirection","PlayButton","GamesPage","mx","slotMachine","bigSlotMachine","style","backgroundColor","loading","keyframes","LoadingBar","Loading","Dialog","dialog","CurrentBalance","open","onClose","handleOutsideClick","cb","nodeRef","useRef","useEffect","el","current","onEvent","event","key","toLowerCase","contains","document","addEventListener","removeEventListener","ref","useDialogCloseHandler","QR","memo","QRious","element","PayModal","className","Input","input","useEventDrivenState","state","setState","PurchaseButton","PayDialog","onBill","setName","ccNumber","setCcNumber","expiry","setExpiry","cvc","setCVC","isValid","useMemo","split","length","validate","inputRef","focus","number","replace","placeholder","onChange","cardNumberInputProps","cardExpiryInputProps","cardCVCInputProps","fieldClassName","onClick","GREEN","UserInfoCard","BillingHistoryCard","Page","Avatar","Gravatar","getPrimary","balanceColor","css","parseInt","Balance","big","PrimaryButton","TopBar","as","Table","table","BillLink","BalanceText","TotalBalanceText","EnlargedText","TimeAgo","BillingHistory","interval","billing","setBilling","fetchBilling","useCallback","then","reverse","React","intervalId","setInterval","window","clearInterval","overflowY","map","bill","idx","balance","moment","timestamp","format","fromNow","colSpan","my","reduce","sum","UserPage","showShareDialog","setShowShareDialog","showBillingDialog","setShowBillingDialog","mr","mb","NotFoundPage","redirect","setRedirect","tid","setTimeout","clearTimeout","Sidebar","h3","renderChild","altText","shouldReposition","alignSelf","GamesSidebar","path","match","getResults","slotsAmount","enableDiagonalWin","slots","gameResults","resultsArr","results","didUserWin","winningResults","SlotMachineColumn","getNextSpriteNum","setSlotMachineColumnRef","shouldUseWinningStyles","doesContainWinningSprite","winningSpriteNum","slotMachineElementRef","SlotMachineColumnCreater","active","spins","delay","randomize","ColumnContainer","imageName","i","StyledImage","slotMachineSpritesImg","blinkAura","animation","SlotMachine","slotMachineType","gamesNames","classic","advanced","gamePrice","gamePriceDescription","winningPrize","winningPrizeDescription","machines","Array","isSlotMachineSpinning","winningSpritesDirection","setShouldUseWinningStyles","setWinningSpriteNum","initializeColumnsWinningStateArr","columnsWinningStateArr","push","columnsWinningState","setColumnsWinningState","createGetNextSpriteNumFunction","index","currentSpriteNum","getPreviousSpriteNum","calculateWinningSpriteNum","isTopLeftToBottomRightDiagonalWinning","isBottomLeftToTopRightDiagonalWinning","isHorizontalWinning","setWinningSpriteColumns","Promise","all","machine","resolve","shuffle","MainContainer","column","StyledButton","Games","render","component","PrivateRoute","exact","Component","AppRoutes","AppContainer","Object","keys","join","App","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.18f34a6d.chunk.js","sourcesContent":["import color from \"color\";\r\n\r\nconst secondary = \"#272121\";\r\nconst primary = \"#2db14b\";\r\nconst bgText = \"#f6e9e9\";\r\nconst positive = \"#008c5a\";\r\nconst negative = \"#ca0303\";\r\n\r\nexport const theme = {\r\n  palette: {\r\n    body: \"#363333\",\r\n    text: bgText,\r\n    primary,\r\n    primaryText: bgText,\r\n    secondary,\r\n    secondaryText: color(secondary)\r\n      .negate()\r\n      .string(),\r\n    inverse: bgText,\r\n    inverseText: \"#363333\",\r\n    positive,\r\n    negative,\r\n    dark: \"rgb(54, 51, 51)\"\r\n  },\r\n  fonts: {\r\n    main: `-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif`,\r\n    code: `source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n    monospace`\r\n  }\r\n};\r\n","export const HOST = process.env.NODE_ENV === \"development\"\r\n  ? \"https://clover-casino.herokuapp.com\"\r\n  : \"http://prod.clover.api.io\";","import React, { createContext, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { HOST } from './config';\r\n\r\nconst UserContext = createContext();\r\nconst useUser = () => useContext(UserContext);\r\n\r\nfunction UserProvider({ children }) {\r\n  const [ userState, setUserState ] = useState(userLocalStorageManagement.get());\r\n\r\n  function setUser(userData) {\r\n    if (!userData) return;\r\n    setUserState(userData);\r\n    userLocalStorageManagement.set(userData);\r\n  }\r\n\r\n  async function fetchUser(username, password) {\r\n    const { data: userData } = await axios.get(HOST + '/api/me', {\r\n      params: { username, password }\r\n    });\r\n    setUser(userData);\r\n  }\r\n\r\n  async function updateUserBalance(gameName, delta, description) {\r\n    const gamesRoutes = {\r\n      classicSlotMachine: '/games/classic-slot-machine',\r\n      advancedSlotMachine: '/games/advanced-slot-machine'\r\n    };\r\n    const { token } = userLocalStorageManagement.get();\r\n    const { data: userData } = await axios({\r\n      url: HOST + '/api/me/bills',\r\n      method: 'POST',\r\n      data: { delta, description, url: gamesRoutes[gameName] },\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    });\r\n    setUser(userData);\r\n  }\r\n\r\n  function logoutUser() {\r\n    setUserState(null);\r\n    userLocalStorageManagement.remove();\r\n  }\r\n\r\n  const contextData = {\r\n    user: userState,\r\n    fetchUser,\r\n    updateUserBalance,\r\n    logoutUser\r\n  };\r\n\r\n  return <UserContext.Provider value={contextData}>{children}</UserContext.Provider>;\r\n}\r\n\r\nconst USER_LOCAL_STORAGE_KEY = '//clover/user/v2';\r\n\r\nconst userLocalStorageManagement = {\r\n  set(user) {\r\n    localStorage.setItem(USER_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n  },\r\n  get() {\r\n    const user = localStorage.getItem(USER_LOCAL_STORAGE_KEY);\r\n    return user && JSON.parse(user);\r\n  },\r\n  remove() {\r\n    localStorage.removeItem(USER_LOCAL_STORAGE_KEY);\r\n  }\r\n};\r\n\r\nexport default UserProvider;\r\nexport { useUser };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Gravatar from 'react-gravatar';\r\nimport { HeaderLogo } from 'alex-clover-ui';\r\n\r\nimport { useUser } from '../UserProvider';\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 50px;\r\n  padding: 0 10px;\r\n  background-color: ${(props) => props.theme.palette.primary};\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${(props) => props.theme.palette.primaryText};\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledSpan = styled.span`margin-right: 10px;`;\r\n\r\nfunction HeaderAccountData({ user }) {\r\n  if (!user) {\r\n    return null;\r\n  }\r\n  return (\r\n    <StyledLink to=\"/me\">\r\n      <StyledSpan>{user.username}</StyledSpan>\r\n      <Gravatar size={30} email={user.email} />\r\n    </StyledLink>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  const { user } = useUser();\r\n  const route = user ? '/games' : '/';\r\n  const logoIcon = (\r\n    <span role=\"img\" aria-label=\"clover-icon\">\r\n      🍀\r\n    </span>\r\n  );\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLogo\r\n        brandName=\"clover\"\r\n        iconAriaLabel=\"clover leave icon\"\r\n        icon={logoIcon}\r\n        route={route}\r\n        fontSize=\"2em\"\r\n        spaceBetweenIconAndText=\"5px\"\r\n      />\r\n      <HeaderAccountData user={user} />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const classicSMdescriptionHtml = (\r\n  <div>\r\n    <p>\r\n      Classic p1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\r\n      eget sem vestibulum, porta neque vel, blandit ex. Quisque tempus ornare\r\n      metus, eget euismod odio efficitur vel. Nunc sagittis ex non tellus ornare\r\n      lacinia. Morbi et rhoncus tortor, vel ultrices metus. Maecenas eu porta\r\n      ligula. Ut porta est urna, id interdum nunc vestibulum in. Nulla nec\r\n      tincidunt nisl. Aliquam in accumsan leo. Cras eget justo ac nisi sodales\r\n      fringilla. Mauris nulla enim, lacinia eget nibh in, posuere malesuada\r\n      ante. Praesent gravida nibh euismod mauris sagittis, at mattis quam\r\n      convallis.\r\n    </p>\r\n    <p>\r\n      Classic p2 Nulla tincidunt, magna eu luctus viverra, orci risus mattis\r\n      est, ut dignissim sem lectus sit amet velit. Integer facilisis dui non\r\n      fringilla cursus. Suspendisse potenti. Cras ex magna, porttitor ac\r\n      lobortis ut, rutrum sed lorem. Pellentesque vitae dui enim. Donec feugiat\r\n      ligula et magna congue commodo. Vestibulum sit amet ante quis eros\r\n      convallis scelerisque vel consectetur arcu. Etiam pharetra at tortor\r\n      elementum dignissim. Duis eu ultrices nisl. Nulla tincidunt, est a dapibus\r\n      maximus, lectus metus blandit dolor, nec maximus massa nisi vel tellus.\r\n      Praesent euismod est at urna pretium, vitae laoreet erat aliquam. Morbi\r\n      quis accumsan urna, placerat lacinia nunc. Vivamus tempus rhoncus enim,\r\n      sit amet malesuada metus molestie a.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport const advancedSMdescriptionHtml = (\r\n  <div>\r\n    <p>\r\n      Advanced p1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\r\n      eget sem vestibulum, porta neque vel, blandit ex. Quisque tempus ornare\r\n      metus, eget euismod odio efficitur vel. Nunc sagittis ex non tellus ornare\r\n      lacinia. Morbi et rhoncus tortor, vel ultrices metus. Maecenas eu porta\r\n      ligula. Ut porta est urna, id interdum nunc vestibulum in. Nulla nec\r\n      tincidunt nisl. Aliquam in accumsan leo. Cras eget justo ac nisi sodales\r\n      fringilla. Mauris nulla enim, lacinia eget nibh in, posuere malesuada\r\n      ante. Praesent gravida nibh euismod mauris sagittis, at mattis quam\r\n      convallis.\r\n    </p>\r\n    <p>\r\n      Advanced p2 Nulla tincidunt, magna eu luctus viverra, orci risus mattis\r\n      est, ut dignissim sem lectus sit amet velit. Integer facilisis dui non\r\n      fringilla cursus. Suspendisse potenti. Cras ex magna, porttitor ac\r\n      lobortis ut, rutrum sed lorem. Pellentesque vitae dui enim. Donec feugiat\r\n      ligula et magna congue commodo. Vestibulum sit amet ante quis eros\r\n      convallis scelerisque vel consectetur arcu. Etiam pharetra at tortor\r\n      elementum dignissim. Duis eu ultrices nisl. Nulla tincidunt, est a dapibus\r\n      maximus, lectus metus blandit dolor, nec maximus massa nisi vel tellus.\r\n      Praesent euismod est at urna pretium, vitae laoreet erat aliquam. Morbi\r\n      quis accumsan urna, placerat lacinia nunc. Vivamus tempus rhoncus enim,\r\n      sit amet malesuada metus molestie a.\r\n    </p>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LinkButton } from 'alex-clover-ui';\r\n\r\nimport {\r\n  classicSMdescriptionHtml,\r\n  advancedSMdescriptionHtml\r\n} from './slotMachinesDescriptions';\r\nimport classicSlotMachineImage from '../../../images/slot-machine.jpg';\r\nimport advancedSlotMachineImage from '../../../images/big-slot-machine.jpg';\r\n\r\nexport default function SlotMachineAbout({\r\n  slotMachineGameName,\r\n  linkUrl,\r\n  cardWidth\r\n}) {\r\n  const imgSrc =\r\n    slotMachineGameName === 'Classic'\r\n      ? classicSlotMachineImage\r\n      : advancedSlotMachineImage;\r\n\r\n  const gameDescriptionHtml =\r\n    slotMachineGameName === 'Classic'\r\n      ? classicSMdescriptionHtml\r\n      : advancedSMdescriptionHtml;\r\n\r\n  return (\r\n    <Container>\r\n      <Card width={cardWidth}>\r\n        <GameImage\r\n          src={imgSrc}\r\n          alt={`${slotMachineGameName} slot machine image`}\r\n          blendMode=\"multiply\"\r\n          position=\"center 20px\"\r\n        />\r\n        <FlexColumn>\r\n          <h3>{slotMachineGameName} Slot Machine</h3>\r\n          {gameDescriptionHtml}\r\n        </FlexColumn>\r\n      </Card>\r\n      <LinkButton\r\n        linkUrl={linkUrl}\r\n        buttonText=\"Play now!\"\r\n        fontSize=\"6em\"\r\n        padding=\"50px\"\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst FlexColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Container = styled(FlexColumn)`\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  box-sizing: border-box;\r\n  width: ${(props) => props.width};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  margin-bottom: 50px;\r\n  background-color: ${(props) => props.theme.palette.inverse};\r\n  color: ${(props) => props.theme.palette.inverseText};\r\n  box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.59);\r\n`;\r\n\r\nconst GameImage = styled.img`\r\n  width: 200px;\r\n  min-width: 200px;\r\n  height: 200px;\r\n  min-height: 200px;\r\n  border: 5px solid ${(props) => props.theme.palette.primary};\r\n  border-radius: 100%;\r\n  margin-right: 10px;\r\n  object-fit: cover;\r\n  mix-blend-mode: ${(props) => props.blendMode || 'unset'};\r\n  object-position: ${(props) => props.position || 'initial'};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LinkButton } from 'alex-clover-ui';\r\n\r\nimport SlotMachineAbout from '../games/SlotMachine/SlotMachineAbout';\r\n\r\nimport casino from '../../images/casino.jpeg';\r\n\r\nconst TopContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(${casino});\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst MegaTitle = styled.h1`\r\n  font-size: 8em;\r\n  text-shadow: 1px 1px 20px black;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 4em;\r\n  text-shadow: 1px 1px 10px black;\r\n  a {\r\n    display: block;\r\n    text-decoration: none;\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    color: rgba(45, 177, 75, 1);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nfunction WelcomePage() {\r\n  return (\r\n    <>\r\n      <TopContainer>\r\n        <MegaTitle>\r\n          <span role=\"img\" aria-label=\"clover leave\">\r\n            🍀\r\n          </span>{' '}\r\n          Clover Casino\r\n        </MegaTitle>\r\n        <Title>\r\n          <a href=\"#game-list\">Take a look at our Games</a>\r\n        </Title>\r\n        <LinkButton\r\n          linkUrl=\"/games\"\r\n          buttonText=\"Play now!\"\r\n          fontSize=\"6em\"\r\n          padding=\"50px\"\r\n        />\r\n      </TopContainer>\r\n      <BottomContainer id=\"game-list\">\r\n        <Title>\r\n          Take a look at our Clover Games<sup>TM</sup>\r\n        </Title>\r\n        <SlotMachineAbout\r\n          slotMachineGameName=\"Classic\"\r\n          linkUrl=\"/games/classic-slot-machine\"\r\n          cardWidth=\"80%\"\r\n        />\r\n        <SlotMachineAbout\r\n          slotMachineGameName=\"Advanced\"\r\n          linkUrl=\"/games/advanced-slot-machine\"\r\n          cardWidth=\"80%\"\r\n        />\r\n      </BottomContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Flex, Box } from 'reflexbox/styled-components';\r\nimport { TextInput } from 'alex-clover-ui';\r\n\r\nimport { useUser } from '../../UserProvider';\r\n\r\nconst LoginBox = styled(Box).attrs({ width: '500px' })`\r\n  background-color: ${props => props.theme.palette.secondary};\r\n  box-shadow: 1px 1px 5px black;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  padding: 20px;\r\n  font-size: 2em;\r\n  align-self: stretch;\r\n  font-weight: bold;\r\n  background-color: ${props => props.theme.palette.primary};\r\n  color: ${props => props.theme.palette.primaryText};\r\n  border: none;\r\n  &:disabled {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Error = styled.p`\r\n  text-align: center;\r\n  color: ${props => props.theme.palette.negative};\r\n`;\r\n\r\nconst createChangeHandler = setter => e => setter(e.target.value);\r\n\r\nfunction LoginPage() {\r\n  const [hasError, setHasError] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { user, fetchUser } = useUser();\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n    if (username && password) {\r\n      try {\r\n        setHasError(false);\r\n        fetchUser(username, password);\r\n      } catch (e) {\r\n        setHasError(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (user) {\r\n    return <Redirect to=\"/games\" />;\r\n  }\r\n  return (\r\n    <Flex\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <LoginBox>\r\n        <LoginForm onSubmit={submit}>\r\n          <Box flex={1} px=\"50px\" pt=\"50px\">\r\n            <TextInput\r\n              id=\"username\"\r\n              shouldBeFocused={true}\r\n              labelText=\"Username\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChangeHandler={createChangeHandler(setUsername)}\r\n              fontSize=\"1.5em\"\r\n            />\r\n          </Box>\r\n          <Box px=\"50px\" py=\"30px\" flex={1}>\r\n            <TextInput\r\n              id=\"password\"\r\n              labelText=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChangeHandler={createChangeHandler(setPassword)}\r\n              fontSize=\"1.5em\"\r\n            />\r\n          </Box>\r\n          {hasError && <Error>Bad username or password</Error>}\r\n          <LoginButton id=\"btn\" disabled={!(username + password)}>\r\n            Login\r\n          </LoginButton>\r\n        </LoginForm>\r\n      </LoginBox>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Flex, Box } from 'reflexbox/styled-components';\r\n\r\nimport slotMachine from '../../images/slot-machine.jpg';\r\nimport bigSlotMachine from '../../images/big-slot-machine.jpg';\r\n\r\nconst Card = styled(Flex).attrs({\r\n  px: '10px',\r\n  py: '20px',\r\n  alignItems: 'center',\r\n  flexDirection: 'column'\r\n})`\r\n  background-color: ${(props) => props.theme.palette.inverse};\r\n  color: ${(props) => props.theme.palette.inverseText};\r\n  box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.59);\r\n  text-align: center;\r\n`;\r\n\r\nconst GameImage = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n  border: 5px solid ${(props) => props.theme.palette.primary};\r\n  mix-blend-mode: ${(props) => props.blendMode || 'unset'};\r\n  object-position: ${(props) => props.position || 'initial'};\r\n`;\r\n\r\nconst PlayButton = styled(Link)`\r\n  display: block;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  font-size: 2em;\r\n  align-self: stretch;\r\n  font-weight: bold;\r\n  background-color: ${(props) => props.theme.palette.primary};\r\n  color: ${(props) => props.theme.palette.primaryText};\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction GamesPage() {\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" width=\"100%\">\r\n      <Card mx=\"50px\" width=\"300px\" height=\"600px\">\r\n        <GameImage src={slotMachine} alt=\"Classic slot machine image\" blendMode=\"multiply\" />\r\n        <h1>Slot Machine</h1>\r\n        <Box flex={1}>\r\n          <h3>\r\n            Only two things are infinite, <br />\r\n            the universe and slot machine combos, <br />\r\n            and I'm not sure about the former.\r\n          </h3>\r\n        </Box>\r\n        <PlayButton to=\"/games/classic-slot-machine\">Play!</PlayButton>\r\n      </Card>\r\n      <Card mx=\"50px\" width=\"300px\" height=\"600px\">\r\n        <GameImage src={bigSlotMachine} alt=\"Advanced slot machine image\" blendMode=\"multiply\" position=\"center 20px\" />\r\n        <h1>Advanced Slot Machine</h1>\r\n        <Box flex={1}>\r\n          <h3>The bigger the risk, the greater the reward!</h3>\r\n        </Box>\r\n        <PlayButton to=\"/games/advanced-slot-machine\" style={{ backgroundColor: '#2db14b' }}>\r\n          Play!\r\n        </PlayButton>\r\n      </Card>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default GamesPage;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst loading = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  20% {\r\n    transform: scale(1, 2.2);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst LoadingBar = styled.div`\r\n  display: inline-block;\r\n  width: 4px;\r\n  height: 18px;\r\n  border-radius: 4px;\r\n  background-color: ${props => props.theme.palette.primary};\r\n  margin: 0 5px;\r\n  animation: ${loading} 1s ease-in-out infinite;\r\n\r\n  &:nth-child(1) {\r\n    animation-delay: 0;\r\n  }\r\n  &:nth-child(2) {\r\n    animation-delay: 0.09s;\r\n  }\r\n  &:nth-child(3) {\r\n    animation-delay: 0.18s;\r\n  }\r\n  &:nth-child(4) {\r\n    animation-delay: 0.27s;\r\n  }\r\n`;\r\n\r\nexport function Loading() {\r\n  return (\r\n    <div>\r\n      <LoadingBar />\r\n      <LoadingBar />\r\n      <LoadingBar />\r\n      <LoadingBar />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport QRious from \"qrious\";\r\nimport { Flex } from \"reflexbox/styled-components\";\r\n\r\nfunction useDialogCloseHandler(cb) {\r\n  const nodeRef = useRef();\r\n  useEffect(() => {\r\n    const { current: el } = nodeRef;\r\n    const onEvent = event => {\r\n      const { target, key } = event;\r\n      if (key && key.toLowerCase() !== \"escape\") {\r\n        return;\r\n      }\r\n      if (target === el || el.contains(target)) {\r\n        return;\r\n      }\r\n      cb();\r\n    };\r\n    document.addEventListener(\"mousedown\", onEvent, true);\r\n    document.addEventListener(\"keydown\", onEvent, true);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onEvent, true);\r\n      document.removeEventListener(\"keydown\", onEvent, true);\r\n    };\r\n  }, [cb]);\r\n  return { ref: nodeRef };\r\n}\r\n\r\nconst Dialog = styled.dialog`\r\n  top: 0;\r\n  bottom: 0;\r\n  height: 150px;\r\n  width: 150px;\r\n  border: none;\r\n  background-color: ${props => props.theme.palette.body};\r\n  color: ${props => props.theme.palette.text};\r\n  box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.59);\r\n`;\r\n\r\nexport function CurrentBalance({ open, onClose, value }) {\r\n  const handleOutsideClick = useDialogCloseHandler(onClose);\r\n  return (\r\n    <Dialog {...handleOutsideClick} open={open}>\r\n      <Flex\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        p=\"5px\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <QR value={value} />\r\n      </Flex>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst QR = memo(({ value }) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    new QRious({\r\n      element: ref.current,\r\n      value\r\n    });\r\n  }, [value]);\r\n  return <canvas ref={ref} />;\r\n});\r\n","import React, { useEffect, useRef, useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Flex } from 'reflexbox/styled-components';\r\nimport CreditCardInput from 'react-credit-card-input';\r\nimport Card from 'react-credit-cards';\r\nimport 'react-credit-cards/es/styles-compiled.css';\r\nimport * as validate from 'card-validator';\r\n\r\nfunction useDialogCloseHandler(cb) {\r\n  const nodeRef = useRef();\r\n  useEffect(() => {\r\n    const { current: el } = nodeRef;\r\n    const onEvent = event => {\r\n      const { target, key } = event;\r\n      if (key && key.toLowerCase() !== 'escape') {\r\n        return;\r\n      }\r\n      if (target === el || el.contains(target)) {\r\n        return;\r\n      }\r\n      cb();\r\n    };\r\n    document.addEventListener('mousedown', onEvent, true);\r\n    document.addEventListener('keydown', onEvent, true);\r\n    return () => {\r\n      document.removeEventListener('mousedown', onEvent, true);\r\n      document.removeEventListener('keydown', onEvent, true);\r\n    };\r\n  }, [cb]);\r\n  return { ref: nodeRef };\r\n}\r\n\r\nconst Dialog = styled.dialog`\r\n  top: 0;\r\n  bottom: 0;\r\n  border: none;\r\n  background-color: ${props => props.theme.palette.body};\r\n  color: ${props => props.theme.palette.text};\r\n  box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.59);\r\n`;\r\n\r\nfunction Modal({ open, onClose, children, className }) {\r\n  const handleOutsideClick = useDialogCloseHandler(onClose);\r\n  return (\r\n    <Dialog {...handleOutsideClick} className={className} open={open}>\r\n      <Flex\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        p=\"5px\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        {children}\r\n      </Flex>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst PayModal = styled(Modal)`\r\n  height: 370px;\r\n`;\r\n\r\nconst Input = styled.input.attrs({ type: 'text' })`\r\n  display: inline-block;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 3px;\r\n  font-size: 20px;\r\n  margin: 10px 0;\r\n  padding: 5px;\r\n`;\r\n\r\nfunction useEventDrivenState() {\r\n  const [state, setState] = useState('');\r\n  const change = e => {\r\n    setState(e.target.value);\r\n  };\r\n  return [state, change];\r\n}\r\n\r\nconst PurchaseButton = styled.button`\r\n  padding: 20px;\r\n  margin-top: 10px;\r\n  border-radius: 10px;\r\n  font-size: 2em;\r\n  align-self: stretch;\r\n  font-weight: bold;\r\n  background-color: ${props => props.theme.palette.primary};\r\n  color: ${props => props.theme.palette.primaryText};\r\n  text-decoration: none;\r\n  border: none;\r\n\r\n  &[disabled] {\r\n    opacity: 0.4;\r\n  }\r\n`;\r\n\r\nexport function PayDialog({ open, onClose, onBill }) {\r\n  const [name, setName] = useEventDrivenState();\r\n  const [ccNumber, setCcNumber] = useEventDrivenState();\r\n  const [expiry, setExpiry] = useEventDrivenState();\r\n  const [cvc, setCVC] = useEventDrivenState();\r\n  const isValid = useMemo(() => {\r\n    return (\r\n      name.split(' ').length > 1 &&\r\n      validate.number(ccNumber).isValid &&\r\n      validate.expirationDate(expiry).isValid &&\r\n      validate.cvv(cvc).isValid\r\n    );\r\n  }, [name, ccNumber, expiry, cvc]);\r\n\r\n  const inputRef = useRef(null);\r\n  useEffect(() => {\r\n    if (open) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <PayModal open={open} onClose={onClose}>\r\n      <Card\r\n        number={ccNumber}\r\n        name={name}\r\n        expiry={expiry.replace(/\\s/g, '')}\r\n        cvc={cvc}\r\n      />\r\n      <Input\r\n        placeholder=\"Card holder name\"\r\n        value={name}\r\n        onChange={setName}\r\n        ref={inputRef}\r\n      />\r\n      <CreditCardInput\r\n        cardNumberInputProps={{\r\n          value: ccNumber,\r\n          onChange: setCcNumber\r\n        }}\r\n        cardExpiryInputProps={{\r\n          value: expiry,\r\n          onChange: setExpiry\r\n        }}\r\n        cardCVCInputProps={{\r\n          value: cvc,\r\n          onChange: setCVC\r\n        }}\r\n        fieldClassName=\"input\"\r\n      />\r\n      <PurchaseButton\r\n        disabled={!isValid}\r\n        onClick={() => {\r\n          onBill();\r\n          onClose();\r\n        }}\r\n      >\r\n        Top up!\r\n      </PurchaseButton>\r\n    </PayModal>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Gravatar from \"react-gravatar\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Flex } from \"reflexbox/styled-components\";\r\nimport { useUser } from \"../../UserProvider\";\r\nimport { Loading } from \"../Loading\";\r\nimport { getPrimary } from \"../../utils\";\r\nimport { CurrentBalance } from \"../CurrentBalance\";\r\nimport { PayDialog } from \"../PayDialog\";\r\nimport { useIntervalCallback } from \"../../utils\";\r\nimport { HOST } from \"../../config\";\r\n\r\nconst GREEN = \"#2db14b\";\r\n\r\nconst Card = styled(Flex).attrs({\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\"\r\n})`\r\n  background-color: ${({\r\n    theme: {\r\n      palette: { secondary: backgroundColor }\r\n    }\r\n  }) => backgroundColor};\r\n  color: ${({\r\n    theme: {\r\n      palette: { secondaryText: inverse }\r\n    }\r\n  }) => inverse};\r\n  box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.59);\r\n  text-align: center;\r\n`;\r\n\r\nconst UserInfoCard = styled(Card)`\r\n  width: 370px;\r\n  @media (max-width: 1400px) {\r\n    width: 300px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst BillingHistoryCard = styled(Card)`\r\n  width: 950px;\r\n  height: 100%;\r\n  @media (max-width: 1400px) {\r\n    width: 850px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 650px;\r\n  }\r\n`;\r\n\r\nconst Page = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 50px 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Avatar = styled(Gravatar).attrs({ size: 150 })`\r\n  border-radius: 100%;\r\n  border: 5px solid ${props => getPrimary(props)};\r\n`;\r\n\r\nlet [positive, negative] = [\"positive\", \"negative\"];\r\nconst balanceColor = css`\r\n  color: ${props =>\r\n    props.theme.palette[parseInt(props.children) > 0 ? positive : negative]};\r\n`;\r\n\r\nconst Balance = styled.big`\r\n  font-size: 3em;\r\n  font-weight: bold;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  ${balanceColor}\r\n`;\r\n\r\nconst PurchaseButton = styled.button`\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  font-size: 1.8em;\r\n  align-self: stretch;\r\n  font-weight: bold;\r\n  background-color: ${props => props.color};\r\n  color: ${props => props.theme.palette.primaryText};\r\n  text-decoration: none;\r\n  border: none;\r\n`;\r\n\r\nconst PrimaryButton = styled.button`\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n  font-weight: bold;\r\n  background-color: ${props => props.theme.palette.primary};\r\n  color: ${props => props.theme.palette.primaryText};\r\n  border: none;\r\n  height: fit-content;\r\n`;\r\n\r\nconst TopBar = styled(Flex).attrs({\r\n  as: \"header\",\r\n  width: \"100%\",\r\n  height: \"50px\",\r\n  justifyContent: \"space-between\",\r\n  p: \"10px\"\r\n})`\r\n  background-color: ${props => props.theme.palette.primary};\r\n  box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.59);\r\n`;\r\n\r\nfunction UserPage() {\r\n  const [showShareDialog, setShowShareDialog] = useState(false);\r\n  const [showBillingDialog, setShowBillingDialog] = useState(false);\r\n  const { user, updateUserBalance, logoutUser } = useUser();\r\n  if (!user) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <Page>\r\n        <PayDialog\r\n          open={showBillingDialog}\r\n          onClose={() => setShowBillingDialog(false)}\r\n          onBill={() => updateUserBalance(-200, \"Top up from credit\")}\r\n        />\r\n        <UserInfoCard mr=\"20px\" mb=\"20px\" px=\"10px\" py=\"20px\">\r\n          <Avatar email={user.email} />\r\n          <h1>{user.username}</h1>\r\n          <h3>{user.email}</h3>\r\n          <Balance>{user.balance}$</Balance>\r\n          <PurchaseButton\r\n            color={GREEN}\r\n            onClick={() => {\r\n              setShowBillingDialog(true);\r\n            }}\r\n          >\r\n            Buy more tokens!\r\n          </PurchaseButton>\r\n        </UserInfoCard>\r\n        <BillingHistoryCard>\r\n          <TopBar>\r\n            <PrimaryButton onClick={() => setShowShareDialog(true)}>\r\n              Share current balance\r\n            </PrimaryButton>\r\n            <PrimaryButton onClick={logoutUser}>Logout</PrimaryButton>\r\n          </TopBar>\r\n          <CurrentBalance\r\n            value={`My current balance at Clover is: ${user.balance}`}\r\n            open={showShareDialog}\r\n            onClose={() => setShowShareDialog(false)}\r\n          />\r\n          <BillingHistory />\r\n        </BillingHistoryCard>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  th {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: ${props => props.theme.palette.secondary};\r\n    padding-top: 10px;\r\n  }\r\n  tfoot {\r\n    td {\r\n      position: sticky;\r\n      bottom: 0;\r\n      background-color: ${props => props.theme.palette.secondary};\r\n    }\r\n  }\r\n  tbody {\r\n    tr {\r\n      height: 30px;\r\n      &:nth-child(even) {\r\n        background-color: rgba(255, 255, 255, 0.1);\r\n      }\r\n\r\n      td {\r\n        border-spacing: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst BillLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${props => props.theme.palette.primary};\r\n`;\r\n\r\nconst BalanceText = styled.span`\r\n  ${balanceColor}\r\n`;\r\n\r\nconst TotalBalanceText = styled(BalanceText)`\r\n  margin-left: 40px;\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst EnlargedText = styled.span`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst TimeAgo = styled.span`\r\n  text-indent: 10px;\r\n  display: inline-block;\r\n  opacity: 0.4;\r\n`;\r\n\r\nfunction BillingHistory() {\r\n  const [billing, setBilling] = useState(null);\r\n  const {\r\n    user: { token }\r\n  } = useUser();\r\n  const fetchBilling = useCallback(\r\n    () =>\r\n      axios(HOST + \"/api/me/bills\", {\r\n        headers: {\r\n          \"x-token\": token\r\n        }\r\n      }).then(({ data }) => setBilling(data.reverse())),\r\n    [token]\r\n  );\r\n  useIntervalCallback(fetchBilling, 10000);\r\n  if (!billing) {\r\n    return (\r\n      <Flex\r\n        flex={1}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n      >\r\n        <Loading />\r\n      </Flex>\r\n    );\r\n  }\r\n  return (\r\n    <Flex flex={1} width=\"100%\" style={{ overflowY: \"auto\" }}>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Description</th>\r\n            <th>Amount</th>\r\n            <th>Balance</th>\r\n            <th>Time of billing</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {billing.map((bill, idx) => (\r\n            <tr key={idx}>\r\n              <td>\r\n                {bill.url ? (\r\n                  <BillLink to={bill.url}>{bill.description}</BillLink>\r\n                ) : (\r\n                  bill.description\r\n                )}\r\n              </td>\r\n              <td>\r\n                <BalanceText>{-bill.delta}</BalanceText>\r\n              </td>\r\n              <td>\r\n                <BalanceText>{bill.balance}</BalanceText>\r\n              </td>\r\n              <td>\r\n                {moment(bill.timestamp).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}\r\n                <TimeAgo>({moment(bill.timestamp).fromNow()})</TimeAgo>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td />\r\n            <td colSpan={3}>\r\n              <Flex\r\n                width=\"100%\"\r\n                alignItems=\"center\"\r\n                height=\"20px\"\r\n                px=\"25px\"\r\n                py=\"5px\"\r\n                my=\"10px\"\r\n              >\r\n                <EnlargedText>Total</EnlargedText>\r\n                <TotalBalanceText>\r\n                  {billing.reduce((sum, { delta }) => sum - delta, 0)}\r\n                </TotalBalanceText>\r\n              </Flex>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </Table>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UserPage;\r\n","import React from 'react';\r\n\r\nfunction getPrimary(props) {\r\n  function selectpr({ theme }) {\r\n    return theme.palette.primary;\r\n  }\r\n  return selectpr(props);\r\n}\r\n\r\nfunction useIntervalCallback(cb, interval) {\r\n  React.useEffect(\r\n    () => {\r\n      cb();\r\n      const intervalId = setInterval(cb, interval);\r\n      return () => {\r\n        if (window.localStorage.getItem('__EXPERIMENTAL_GC')) {\r\n          clearInterval(intervalId);\r\n        }\r\n      };\r\n    },\r\n    [ cb, interval ]\r\n  );\r\n}\r\n\r\nexport { getPrimary, useIntervalCallback };\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Flex } from 'reflexbox/styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 5em;\r\n  text-align: center;\r\n`;\r\n\r\nfunction NotFoundPage() {\r\n  const [redirect, setRedirect] = useState(false);\r\n  useEffect(() => {\r\n    const tid = setTimeout(() => {\r\n      setRedirect(true);\r\n    }, 3000);\r\n    return () => clearTimeout(tid);\r\n  });\r\n  return redirect ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n    >\r\n      <Title>\r\n        Page not found :(\r\n        <small>\r\n          <p>Redirecting you back to home page...</p>\r\n        </small>\r\n      </Title>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { Flex, Box } from 'reflexbox/styled-components';\r\nimport { useUser } from '../../UserProvider';\r\nimport slotMachine from '../../images/slot-machine.jpg';\r\nimport bigSlotMachine from '../../images/big-slot-machine.jpg';\r\n\r\nconst Sidebar = styled(Flex).attrs({\r\n  as: 'aside',\r\n  width: '200px',\r\n  height: '100%',\r\n  p: '10px',\r\n  flexDirection: 'column'\r\n})`\r\n  background-color: ${(props) => props.theme.palette.secondary};\r\n  color: ${(props) => props.theme.palette.secondaryText};\r\n\r\n  hr {\r\n    background-color: currentColor;\r\n    border: none;\r\n    width: 100%;\r\n    height: 1px;\r\n  }\r\n`;\r\n\r\nconst BalanceText = styled.h3`\r\n  margin-top: 0;\r\n  margin-bottom: 0.5em;\r\n  color: ${(props) => props.theme.palette[parseInt(props.children) > 0 ? 'positive' : 'negative']};\r\n`;\r\n\r\nconst GameImage = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n  border: 5px solid ${(props) => props.theme.palette.primary};\r\n  mix-blend-mode: ${(props) => props.blendMode || 'unset'};\r\n  object-position: ${(props) => props.position || 'initial'};\r\n`;\r\n\r\nfunction renderChild(slotMachine, url, altText, shouldReposition) {\r\n  return (\r\n    <Box my=\"10px\" alignSelf=\"center\">\r\n      <Link to={url}>\r\n        <GameImage src={slotMachine} alt={altText} position={shouldReposition && 'center 5px'} />\r\n      </Link>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function GamesSidebar() {\r\n  const { user } = useUser();\r\n  if (!user) return null;\r\n  return (\r\n    <Sidebar>\r\n      <h2>Balance</h2>\r\n      <BalanceText>{user.balance}$</BalanceText>\r\n      <hr />\r\n      <Route\r\n        path=\"/games/classic-slot-machine\"\r\n        children={({ match }) => {\r\n          return match ? null : renderChild(slotMachine, '/games/classic-slot-machine', 'Classic slot machine image');\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/games/advanced-slot-machine\"\r\n        children={({ match }) => {\r\n          return match\r\n            ? null\r\n            : renderChild(bigSlotMachine, '/games/advanced-slot-machine', 'Advanced slot machine image', true);\r\n        }}\r\n      />\r\n    </Sidebar>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { HOST } from './config';\r\n\r\nexport async function getResults(slotsAmount, enableDiagonalWin) {\r\n  const { data } = await axios({\r\n    method: 'POST',\r\n    url: HOST + '/api/slot/result',\r\n    data: { slots: slotsAmount, enableDiagonalWin }\r\n  });\r\n  const gameResults = {\r\n    resultsArr: data.results,\r\n\r\n    // Horizontal\r\n    // resultsArr: [ 4, 4, 4 ],\r\n    // resultsArr: [ 5, 5, 5, 5, 5 ],\r\n\r\n    // resultsArr: [1, 0, 7, 0, 0],\r\n    // resultsArr: [ 0, 7, 6, 0, 0 ],\r\n    // resultsArr: [ 3, 0, 7, 6, 0 ],\r\n\r\n    // Top-left to bottom-right diagonals\r\n    // resultsArr: [ 2, 1, 0, 5, 1 ],\r\n    // resultsArr: [ 6, 2, 1, 0, 5 ],\r\n    // resultsArr: [ 5, 6, 2, 1, 0 ],\r\n\r\n    // Bottom-left to top-right diagonals\r\n    // resultsArr: [ 0, 1, 2, 1, 6 ],\r\n    // resultsArr: [ 6, 0, 1, 2, 5 ],\r\n    // resultsArr: [ 5, 6, 0, 1, 2 ],\r\n\r\n    // Both diagonals\r\n    // resultsArr: [ 2, 1, 0, 1, 2 ],\r\n    // resultsArr: [ 0, 1, 2, 1, 0 ],\r\n\r\n    // didUserWin: true\r\n    didUserWin: data.winningResults\r\n  };\r\n  return gameResults;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport SlotMachineColumnCreater from 'jquery-slotmachine/lib/slot-machine';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nimport slotMachineSpritesImg from '../../../images/slot-sprites.png';\r\n\r\nexport default function SlotMachineColumn({\r\n  getNextSpriteNum,\r\n  setSlotMachineColumnRef,\r\n  shouldUseWinningStyles,\r\n  doesContainWinningSprite,\r\n  winningSpriteNum\r\n}) {\r\n  const slotMachineElementRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const element = slotMachineElementRef.current;\r\n    const slotMachine = new SlotMachineColumnCreater(element, {\r\n      active: 0,\r\n      spins: 10,\r\n      delay: 450,\r\n      randomize: getNextSpriteNum\r\n    });\r\n    setSlotMachineColumnRef(slotMachine);\r\n  }, []);\r\n\r\n  const imagesNamesArr = [\r\n    'bell',\r\n    'cherry',\r\n    'grape',\r\n    'seven',\r\n    'gold',\r\n    'bar',\r\n    'two bar',\r\n    'three bar'\r\n  ];\r\n\r\n  return (\r\n    <ColumnContainer ref={slotMachineElementRef}>\r\n      {imagesNamesArr.map((imageName, i) => (\r\n        <StyledImage\r\n          key={i}\r\n          src={slotMachineSpritesImg}\r\n          alt={imageName}\r\n          id={i}\r\n          shouldUseWinningStyles={\r\n            shouldUseWinningStyles &&\r\n            doesContainWinningSprite &&\r\n            winningSpriteNum === i\r\n          }\r\n        />\r\n      ))}\r\n    </ColumnContainer>\r\n  );\r\n}\r\n\r\n// --------------- Styled Components ----------------- //\r\n\r\nconst ColumnContainer = styled.div`\r\n  width: 100px;\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst blinkAura = keyframes`\r\n  0% {\r\n    box-shadow: 0px 0px 2px var(--primary) inset;\r\n  }\r\n  100% {\r\n    box-shadow: 0px 0px 15px var(--primary) inset;\r\n  }\r\n`;\r\nconst animation = props =>\r\n  css`\r\n    ${blinkAura} 0.6s ease-out 0s infinite alternate none running;\r\n  `;\r\n\r\nconst StyledImage = styled.img`\r\n  width: 100px;\r\n  height: 110px;\r\n  object-fit: none;\r\n  transform: translateY(100px);\r\n  border-radius: 5px;\r\n  object-position: ${props => `${-10 - 110 * props.id}px -80px`};\r\n\r\n  animation: ${props => (props.shouldUseWinningStyles ? animation : '')};\r\n`;\r\n\r\n// object-position: ${props => {\r\n//   console.log(\r\n//     'id:',\r\n//     props.id,\r\n//     '| shouldUseWinningStyles:',\r\n//     props.shouldUseWinningStyles\r\n//   );\r\n//   return `${-10 - 110 * props.id}px -80px`;\r\n// }};\r\n","import React, { useState, useRef, useEffect, Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getResults } from '../../../ajaxRequests';\r\nimport { useUser } from '../../../UserProvider';\r\n\r\nimport SlotMachineColumn from './SlotMachineColumn';\r\n\r\nexport default function SlotMachine({ slotMachineType }) {\r\n  // ------- Slot Machine games configurations ------- //\r\n  const gamesNames = {\r\n    classic: 'classicSlotMachine',\r\n    advanced: 'advancedSlotMachine'\r\n  };\r\n  const slotsAmount = {\r\n    classic: 3,\r\n    advanced: 5\r\n  };\r\n  const gamePrice = {\r\n    classic: 150,\r\n    advanced: 250\r\n  };\r\n  const gamePriceDescription = {\r\n    classic: 'Playing Classic Slot Machine game',\r\n    advanced: 'Playing Advanced Slot Machine game'\r\n  };\r\n  const winningPrize = {\r\n    classic: 500,\r\n    advanced: 1500\r\n  };\r\n  const winningPrizeDescription = {\r\n    classic: 'Winning at Classic Slot Machine!',\r\n    advanced: 'Winning at Advanced Slot Machine!'\r\n  };\r\n  const enableDiagonalWin = {\r\n    classic: false,\r\n    advanced: true\r\n  };\r\n  // -------------------------------------------------- //\r\n\r\n  const gameResults = useRef();\r\n  const machines = useRef(Array(slotsAmount[slotMachineType]));\r\n  const isSlotMachineSpinning = useRef(false);\r\n  const winningSpritesDirection = useRef('');\r\n\r\n  const [ shouldUseWinningStyles, setShouldUseWinningStyles ] = useState(false);\r\n  const [ winningSpriteNum, setWinningSpriteNum ] = useState(null);\r\n\r\n  function initializeColumnsWinningStateArr(slotsAmount) {\r\n    const columnsWinningStateArr = [];\r\n    for (let i = 0; i < slotsAmount; i++) {\r\n      columnsWinningStateArr.push({ doesContainWinningSprite: false });\r\n    }\r\n    return columnsWinningStateArr;\r\n  }\r\n\r\n  const [ columnsWinningState, setColumnsWinningState ] = useState(\r\n    // Array(slotsAmount[slotMachineType]).fill({\r\n    //   doesContainWinningSprite: false\r\n    // })\r\n    initializeColumnsWinningStateArr(slotsAmount[slotMachineType])\r\n  );\r\n\r\n  const { updateUserBalance } = useUser();\r\n\r\n  useEffect(\r\n    () => {\r\n      setColumnsWinningState(\r\n        // Array(slotsAmount[slotMachineType]).fill({\r\n        //   doesContainWinningSprite: false\r\n        // })\r\n        initializeColumnsWinningStateArr(slotsAmount[slotMachineType])\r\n      );\r\n    },\r\n    [ slotMachineType ]\r\n  );\r\n\r\n  // ---------------- Helper functions ----------------//\r\n  function createGetNextSpriteNumFunction(index) {\r\n    return () => gameResults.current.resultsArr[index];\r\n  }\r\n\r\n  function getNextSpriteNum(currentSpriteNum) {\r\n    return currentSpriteNum < 7 ? currentSpriteNum + 1 : 0;\r\n  }\r\n\r\n  function getPreviousSpriteNum(currentSpriteNum) {\r\n    return currentSpriteNum > 0 ? currentSpriteNum - 1 : 7;\r\n  }\r\n\r\n  function calculateWinningSpriteNum() {\r\n    const { resultsArr } = gameResults.current;\r\n\r\n    if (slotMachineType === 'classic') {\r\n      winningSpritesDirection.current = 'horizontal';\r\n      return resultsArr[0];\r\n    }\r\n\r\n    if (slotMachineType === 'advanced') {\r\n      let isHorizontalWinning = true,\r\n        isTopLeftToBottomRightDiagonalWinning,\r\n        isBottomLeftToTopRightDiagonalWinning;\r\n\r\n      for (let i = 0; i < resultsArr.length - 1; i++) {\r\n        if (resultsArr[i] !== resultsArr[i + 1]) {\r\n          isHorizontalWinning = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isHorizontalWinning) {\r\n        winningSpritesDirection.current = 'horizontal';\r\n        return resultsArr[0];\r\n      }\r\n\r\n      for (let i = 0; i < resultsArr.length - 2; i++) {\r\n        // Checking top-left to bottom-right diagonals\r\n        isTopLeftToBottomRightDiagonalWinning =\r\n          getPreviousSpriteNum(resultsArr[i]) === resultsArr[i + 1] &&\r\n          resultsArr[i + 1] === getNextSpriteNum(resultsArr[i + 2]);\r\n        // Checking bottom-left to top-right diagonals\r\n        isBottomLeftToTopRightDiagonalWinning =\r\n          getNextSpriteNum(resultsArr[i]) === resultsArr[i + 1] &&\r\n          resultsArr[i + 1] === getPreviousSpriteNum(resultsArr[i + 2]);\r\n\r\n        if (\r\n          isTopLeftToBottomRightDiagonalWinning ||\r\n          isBottomLeftToTopRightDiagonalWinning\r\n        ) {\r\n          winningSpritesDirection.current = 'diagonal';\r\n          return resultsArr[i + 1];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function setWinningSpriteColumns(winningSpriteNum) {\r\n    let columnsWinningStateArr;\r\n    if (winningSpritesDirection.current === 'horizontal') {\r\n      columnsWinningStateArr = columnsWinningState.map(() => {\r\n        return { doesContainWinningSprite: true };\r\n      });\r\n    } else if (winningSpritesDirection.current === 'diagonal') {\r\n      columnsWinningStateArr = [ ...columnsWinningState ];\r\n\r\n      const { resultsArr } = gameResults.current;\r\n      for (let i = 0; i < resultsArr.length - 2; i++) {\r\n        if (\r\n          (getPreviousSpriteNum(resultsArr[i]) === winningSpriteNum &&\r\n            resultsArr[i + 1] === winningSpriteNum &&\r\n            getNextSpriteNum(resultsArr[i + 2]) === winningSpriteNum) ||\r\n          (getNextSpriteNum(resultsArr[i]) === winningSpriteNum &&\r\n            resultsArr[i + 1] === winningSpriteNum &&\r\n            getPreviousSpriteNum(resultsArr[i + 2]) === winningSpriteNum)\r\n        ) {          \r\n          columnsWinningStateArr[i].doesContainWinningSprite = true;\r\n          columnsWinningStateArr[i + 1].doesContainWinningSprite = true;\r\n          columnsWinningStateArr[i + 2].doesContainWinningSprite = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setColumnsWinningState(columnsWinningStateArr);\r\n  }\r\n  // -------------------------------------------------- //\r\n\r\n  async function handleClick() {\r\n    if (isSlotMachineSpinning.current) {\r\n      return;\r\n    }\r\n    setShouldUseWinningStyles(false);\r\n    setWinningSpriteNum(null);\r\n    isSlotMachineSpinning.current = true;\r\n\r\n    // 1) Bill user for playing the game\r\n    await updateUserBalance(\r\n      gamesNames[slotMachineType],\r\n      gamePrice[slotMachineType],\r\n      gamePriceDescription[slotMachineType]\r\n    );\r\n\r\n    // 2) Get game results from server\r\n    gameResults.current = await getResults(\r\n      slotsAmount[slotMachineType],\r\n      enableDiagonalWin[slotMachineType]\r\n    );\r\n\r\n    // 3) Spin the slot machine columns and and stop on sprite number that returned from server\r\n    await Promise.all(\r\n      machines.current.map(\r\n        (machine) => new Promise((resolve) => machine.shuffle(resolve))\r\n      )\r\n    );\r\n\r\n    // 4) In case user won, add styles to the relevant sprites and give user the prize\r\n    if (gameResults.current.didUserWin) {\r\n      const winningSpriteNum = calculateWinningSpriteNum();\r\n      setWinningSpriteNum(winningSpriteNum);\r\n      setWinningSpriteColumns(winningSpriteNum);\r\n      setShouldUseWinningStyles(true);\r\n      updateUserBalance(\r\n        gamesNames[slotMachineType],\r\n        -winningPrize[slotMachineType],\r\n        winningPrizeDescription[slotMachineType]\r\n      );\r\n    }\r\n\r\n    isSlotMachineSpinning.current = false;\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Fragment>\r\n        {columnsWinningState.map((column, index) => (\r\n          <SlotMachineColumn\r\n            key={slotMachineType + '-' + index}\r\n            getNextSpriteNum={createGetNextSpriteNumFunction(index)}\r\n            setSlotMachineColumnRef={(machine) =>\r\n              (machines.current[index] = machine)}\r\n            shouldUseWinningStyles={shouldUseWinningStyles}\r\n            doesContainWinningSprite={column.doesContainWinningSprite}\r\n            winningSpriteNum={winningSpriteNum}\r\n          />\r\n        ))}\r\n      </Fragment>\r\n      <StyledButton onClick={handleClick}>Roll!</StyledButton>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\n// --------------- Styled Components ----------------- //\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 100px;\r\n  height: 100px;\r\n  position: relative;\r\n  margin-left: 30px;\r\n  color: var(--primaryText);\r\n  background-color: var(--primary);\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 100%;\r\n  font-size: 2.5em;\r\n  font-weight: bold;\r\n`;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { GamesSidebar } from './GamesSidebar';\r\nimport SlotMachine from './SlotMachine/SlotMachine';\r\nimport SlotMachineAbout from './SlotMachine/SlotMachineAbout';\r\nimport NotFoundPage from '../pages/NotFoundPage';\r\n\r\nimport { useUser } from '../../UserProvider';\r\n\r\nfunction Games() {\r\n  const { user } = useUser();\r\n  return (\r\n    <Container>\r\n      <GamesSidebar />\r\n      <Switch>\r\n        <Route\r\n          path=\"/games/classic-slot-machine\"\r\n          render={() =>\r\n            user ? (\r\n              <SlotMachine slotMachineType=\"classic\" />\r\n            ) : (\r\n              <SlotMachineAbout\r\n                slotMachineGameName=\"Classic\"\r\n                linkUrl=\"/login\"\r\n                cardWidth=\"100%\"\r\n              />\r\n            )}\r\n        />\r\n        <Route\r\n          path=\"/games/advanced-slot-machine\"\r\n          render={() =>\r\n            user ? (\r\n              <SlotMachine slotMachineType=\"advanced\" />\r\n            ) : (\r\n              <SlotMachineAbout\r\n                slotMachineGameName=\"Advanced\"\r\n                linkUrl=\"/login\"\r\n                cardWidth=\"100%\"\r\n              />\r\n            )}\r\n        />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Games;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { useUser } from '../UserProvider';\r\nimport WelcomePage from './pages/WelcomePage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport GamesPage from './pages/GamesPage';\r\nimport UserPage from './pages/UserPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport Games from './games/Games';\r\n\r\nfunction PrivateRoute({ path, exact, component: Component }) {\r\n  const { user } = useUser();\r\n  return (\r\n    <Route\r\n      {...{ path, exact }}\r\n      component={() => (user ? <Component /> : <Redirect to=\"/login\" />)}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AppRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={WelcomePage} />\r\n      <Route path=\"/login\" component={LoginPage} />\r\n      <PrivateRoute path=\"/games\" exact component={GamesPage} />\r\n      <Route path=\"/games\" component={Games} />\r\n      <PrivateRoute path=\"/me\" component={UserPage} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Box } from 'reflexbox/styled-components';\r\n\r\nimport Header from './Header';\r\nimport AppRoutes from './AppRoutes';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: ${(props) => props.theme.palette.dark};\r\n  color: ${(props) => props.theme.palette.text};\r\n  ${(props) =>\r\n    Object.keys(props.theme.palette).map((color) => `--${color}: ${props.theme.palette[color]};`).join('\\n')};\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <AppContainer>\r\n      <Header />\r\n      <Box height=\"calc(100% - 50px)\">\r\n        <AppRoutes />\r\n      </Box>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport \"normalize.css\";\r\nimport \"./styles/global-styles.css\";\r\nimport { theme } from \"./styles/theme\";\r\n\r\nimport UserProvider from \"./UserProvider\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Router>\r\n      <UserProvider>\r\n        <App />\r\n      </UserProvider>\r\n    </Router>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/slot-machine.d80bafe4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/big-slot-machine.3a5e643a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/casino.cf710020.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/slot-sprites.4226643b.png\";"],"sourceRoot":""}